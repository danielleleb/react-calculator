{"version":3,"sources":["components/Button.js","actions/index.js","components/Display.js","components/ButtonContainer.js","components/App.js","reducers/index.js","reducers/InputReducer.js","index.js"],"names":["equation","number","previousTotal","Button","handleClick","event","id","_this","props","input","length","updateInput","split","join","push","clearInput","result","eval","includes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","this","value","Component","mapStateToProps","state","mapDispatchToProps","dispatch","bindActionCreators","connect","__webpack_require__","d","__webpack_exports__","INPUT_UPDATED","INPUT_CLEARED","type","payload","Display","react_default","buttons","1","2","3","4","5","6","7","8","9","0","+","-","*","/",".","=","clear","ButtonContainer","buttonElements","i","button","key","Object","values","keys","App","Display_Display","ButtonContainer_ButtonContainer","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","concat","store","createStore","reducers","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0f0eee08.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateInput, clearInput} from \"../actions\";\n\nlet equation;\nlet number = [0];\nlet previousTotal;\nclass Button extends Component {\n\n    handleClick = (event) => {\n        let id = this.props.id[0];\n        let input = this.props.input;\n\n        switch(id) {\n            case '-':\n            case '+':\n            case '/':\n            case '*':\n                if (input.length == 0) {\n                    return;\n                } else if (\n                    input[input.length - 1] == '-' ||\n                    input[input.length - 1] == '+' ||\n                    input[input.length - 1] == '/' ||\n                    input[input.length - 1] == '*') {\n                    this.props.updateInput(id);\n                    equation = equation.split('');\n                    equation[equation.length - 1] = id;\n                    equation = equation.join('')\n                    number = [];\n                } else {\n                    this.props.updateInput(id);\n                    equation = equation ? equation + (number.join('') + id) : (number.join('') + id);\n                    number = [];\n                }\n                break;\n            case '0' :\n                if (number.length == 1 && number[0] == 0) {\n                    return;\n                } else {\n                    number.push(id);\n                    this.props.updateInput(id);\n                }\n                break;\n            case '=':\n                previousTotal = '';\n                this.props.updateInput(id)\n                equation = equation ? equation + (number.join('')) : (number.join(''));\n                this.props.clearInput();\n                let result = eval(equation);\n                this.props.updateInput(result)\n                equation = eval(equation);\n                number = [];\n                break;\n            case 'clear':\n                equation = '';\n                number = [0];\n                this.props.clearInput();\n                break;\n            case '.':\n                if (number.includes('.')) {\n                    return;\n                } else {\n                    number.push(id);\n                    this.props.updateInput(id);\n                }\n                break;\n            default:\n                if (number.length == 1 && number[0] == 0) {\n                    number = [];\n                    number.push(id);\n                    this.props.updateInput(id);\n                } else {\n                    number.push(id)\n                    this.props.updateInput(id);\n                }\n\n        }\n    };\n\n    render() {\n        return (\n            <div className='button'>\n                <button onClick={this.handleClick} id={this.props.value}>{this.props.id}</button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        input: state.input,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({updateInput, clearInput}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);\n","export const INPUT_UPDATED = 'INPUT_UPDATED';\nexport const INPUT_CLEARED = 'INPUT_CLEARED';\n\n\nexport function updateInput(input) {\n    return {\n        type: INPUT_UPDATED,\n        payload: input\n    }\n}\n\n// export function updateEquation(equation) {\n//     console.log('equation', equation)\n//\n//     return {\n//         type: EQUATION_UPDATED,\n//         payload: equation\n//     }\n//\n// }\n\nexport function clearInput() {\n    return {\n        type: INPUT_CLEARED,\n        payload: ''\n    }\n}","import React, {Component} from 'react';\n\nexport default class Display extends Component {\n    render() {\n        return(\n            <div id=\"display\" className='display'>\n                {this.props.input.length == 0 ? '0' : this.props.input}\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react';\nimport Button from './Button';\n\nconst buttons = [\n    {\n        1: 'one'\n    },\n    {\n        2: 'two'\n    },\n    {\n        3: 'three'\n    },\n    {\n        4: 'four'\n    },\n    {\n        5: 'five'\n    },\n    {\n        6: 'six'\n    },\n    {\n        7: 'seven'\n    },\n    {\n        8: 'eight'\n    },\n    {\n        9: 'nine'\n    },\n    {\n        0: 'zero'\n    },\n    {\n        '+': 'add'\n    },\n    {\n        '-': 'subtract'\n    },\n    {\n        '*': 'multiply'\n    },\n    {\n        '/': 'divide'\n    },\n    {\n        '.': 'decimal'\n    },\n    {\n        '=': 'equals'\n    },\n    {\n        'clear': 'clear'\n    }\n]\n\nexport default class ButtonContainer extends Component {\n    render() {\n        const buttonElements = [];\n\n        for (let i = 0; i < buttons.length; i++) {\n            let button = buttons[i];\n            buttonElements.push(<Button\n                key={Object.values(button)}\n                id={Object.keys(button)}\n                value={Object.values(button)}\n            />)\n        }\n        return(\n            <div className='button__container'>\n                {buttonElements}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport '../App.css';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport Display from './Display';\nimport ButtonContainer from './ButtonContainer';\nimport {updateInput} from \"../actions\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Display input={this.props.input}/>\n        <ButtonContainer/>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({updateInput}, dispatch)\n}\n\nfunction mapPropsToState(state) {\n    return {\n        input: state.input\n    }\n}\n\nexport default connect(mapPropsToState, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\nimport InputReducer from './InputReducer';\n\nconst rootReducer = combineReducers({\n    input: InputReducer,\n})\n\nexport default rootReducer;","import {INPUT_UPDATED} from '../actions';\nimport {INPUT_CLEARED} from \"../actions\";\n\nconst defaultState = 0;\n\nexport default function (state=[], action) {\n    switch(action.type) {\n        case INPUT_UPDATED:\n            return [...state, action.payload]\n            break;\n        case INPUT_CLEARED:\n            return '';\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {createStore} from 'redux';\n// import * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers'\n\n\nconst store= createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}